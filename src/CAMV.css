#viewBox {
  /*height: calc(100% - 29px);*/
  /*width: 98%;*/
  /*margin: 100px 500px;*/
  /*overflow:hidden;*/
}

text.shadow {
    stroke: white;
    stroke-width: .05px;
    opacity: 1;
}

#scanSelectionList {
  float: left;
  width: 20%;
  height: 100%;
  overflow: scroll;
  padding: 0;
}

#sequenceBox {
  height: 15%;
  width: auto;
  overflow-x: auto;
  margin-bottom: 0%;
}

#modalBIons, #modalYIons {
  display: inline-block;
  vertical-align: top;
  width: 50%;
}

#scanDataContainer {
  float: left;
  position: relative;
  width: auto;
  top: 50%;
  transform: translate(10px, -50%);
}

#scanData p {
  margin: 0px auto;
  white-space: nowrap;
}

#sequenceContainer {
  float: right;
  position: relative;
  top: 50%;
  transform: translate(-10px, -50%);
}

#spectra {
  height: 85%;
  margin-bottom: 0%;
  width: auto;
}

#sequenceSpectraContainer {
  height: 100%;
  width: 80%;
  float: right;
}

#fragmentSpectrumBox {
  height: 100%;
  width: 75%;
}

.fragmentChart {
  height: 100%;
  width: 100%;
}

#updateBox {
  padding: 0% 10%;
  height: 7.5%;
  width: 100%;
}

#choiceBox {
  float: right;
}

#precursorQuantContainer {
  float: right;
  width: 25%;
}

#precursorSpectrumBox {
  height: 50%;
  width: 100%;
}

.precursorChart {
  height: 100%;
  width: 100%;
}

#quantSpectrumBox {
  height: 50%;
  width: 100%;
}

.quantChart {
  height: 100%;
  width: 100%;
}

#exportSave {
  padding: 0% 5%;
  height: 5%;
  float: right;
  transform: translate(-25%, 0px);
}

#openImport, #openSave, #openExport {
  margin: 0% auto;
}

.aminoAcid {
  width: 15px;
  text-align: center;
}

.yIon, .bIon {
  text-align: center;
}

#mzTable {
  border: 1px;
  border-spacing: 5px;
}

.selectedListItem {
  cursor: pointer;
  background-color: LightGray;
}

.unselectedListItem {
  cursor: pointer;
}

.choiceButton {
  margin: 0 auto;
}

#setMinMZ {
  float: left;
  margin-right: 1%;
}

#setMaxMZ {
  float: left;
}

.numInput {
  width: 50px;
}

input:disabled {
  background-color: LightGray;
}

li[class=accept] > a {
  color: #5CB85C;
}

li[class=maybe] > a {
  color: yellow;
}

li[class=reject] > a {
  color: red;
}

li[class=truncated] > a {
  color: orange;
}

li[class=undecided] > a {
  color: black;
}

.rc-tree-node-selected {
  background-color: #ffe6b0;
  border: 1px #ffb951 solid;
  opacity: 0.8;
}

ul {
  list-style-type: none;
  padding: 0;
  margin-left: 10px;
  border-left: 1px solid #333;
}

li::before {
  content: "\00a0\00a0";
  bottom: 8;
  position: relative;
  border-bottom: 1px solid #333;
}
